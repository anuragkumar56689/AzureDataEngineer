{
	"name": "pipeline1",
	"properties": {
		"activities": [
			{
				"name": "Get table list",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": "select * from dbo.watermark",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "AzureSqlTable1",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "ForEach1",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Get table list",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"activities": [
						{
							"name": "Copy data1",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "AzureSqlSource",
									"sqlReaderQuery": {
										"value": "@concat('select * from dbo.',item().tablename,'where date2 > ',if(equals(item().lowwatermark,null),pipeline().parameters.LWM,item().lowerwatermark), ' and ', 'date2 <=', if(equals(item().table,null),formatDateTime(utcNow(),'dd/MM/yyyy'),item().highwatermark))",
										"type": "Expression"
									},
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"enableStaging": false
							},
							"inputs": [
								{
									"referenceName": "AzureSqlTable1",
									"type": "DatasetReference"
								}
							]
						},
						{
							"name": "Max of watermark from source table",
							"type": "Lookup",
							"dependsOn": [
								{
									"activity": "Copy data1",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "AzureSqlSource",
									"sqlReaderQuery": {
										"value": "@concat('select max(createdate) from' , item().TABLE_NAME)",
										"type": "Expression"
									},
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"dataset": {
									"referenceName": "AzureSqlTable1",
									"type": "DatasetReference"
								}
							}
						},
						{
							"name": "update lwm with max of water mark value",
							"type": "Script",
							"dependsOn": [
								{
									"activity": "Max of watermark from source table",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"linkedServiceName": {
								"referenceName": "AzureSqlDatabase1",
								"type": "LinkedServiceReference"
							},
							"typeProperties": {
								"scripts": [
									{
										"type": "Query",
										"text": {
											"value": "@concat('update dbo.watermark set lowerwatermark =',activity('Max of watermark from source table').output.firstRow,'higerwatermark =',formatDateTime(getFutureTime(1,'Day'),'dd/MM/yyyy')\n)",
											"type": "Expression"
										}
									}
								],
								"scriptBlockExecutionTimeout": "02:00:00"
							}
						},
						{
							"name": "success Notification",
							"type": "WebActivity",
							"state": "Inactive",
							"onInactiveMarkAs": "Succeeded",
							"dependsOn": [
								{
									"activity": "update success records into audit",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": []
						},
						{
							"name": "update failure records into audit",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "Copy data1",
									"dependencyConditions": [
										"Failed"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[dbo].[update_audit]",
								"storedProcedureParameters": {
									"overall_status": {
										"value": "Failure",
										"type": "String"
									},
									"pipelinename": {
										"value": {
											"value": "@pipeline().Pipeline",
											"type": "Expression"
										},
										"type": "String"
									},
									"source_count": {
										"value": null,
										"type": "Int32"
									},
									"sourcetable": {
										"value": {
											"value": "@item().TABLE_NAME",
											"type": "Expression"
										},
										"type": "String"
									},
									"target_count": {
										"value": null,
										"type": "Int32"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "AzureSqlDatabase1",
								"type": "LinkedServiceReference"
							}
						},
						{
							"name": "update success records into audit",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "update lwm with max of water mark value",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[dbo].[update_audit]",
								"storedProcedureParameters": {
									"overall_status": {
										"value": "Sucess",
										"type": "String"
									},
									"pipelinename": {
										"value": {
											"value": "@pipeline().Pipeline",
											"type": "Expression"
										},
										"type": "String"
									},
									"source_count": {
										"value": {
											"value": "@activity('Copy data1').output.rowsRead",
											"type": "Expression"
										},
										"type": "Int32"
									},
									"sourcetable": {
										"value": {
											"value": "@item().TABLE_NAME",
											"type": "Expression"
										},
										"type": "String"
									},
									"target_count": {
										"value": {
											"value": "@activity('Copy data1').output.rowsCopied",
											"type": "Expression"
										},
										"type": "Int32"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "AzureSqlDatabase1",
								"type": "LinkedServiceReference"
							}
						},
						{
							"name": "Failure Notification",
							"type": "WebActivity",
							"state": "Inactive",
							"onInactiveMarkAs": "Succeeded",
							"dependsOn": [
								{
									"activity": "update failure records into audit",
									"dependencyConditions": [
										"Failed"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": []
						}
					]
				}
			}
		],
		"parameters": {
			"LWM": {
				"type": "string",
				"defaultValue": "01/01/1900"
			},
			"HWM": {
				"type": "string",
				"defaultValue": "01/10/2024"
			}
		},
		"variables": {
			"Testvalue": {
				"type": "String"
			}
		},
		"annotations": [],
		"lastPublishTime": "2024-09-26T09:59:37Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}